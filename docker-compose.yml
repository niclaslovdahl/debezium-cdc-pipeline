version: '3.3'

services:
  zookeeper:
    container_name: zookeeper
    networks:
      - kafka_network
    image: wurstmeister/zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - '2181:2181'

  kafka:
    container_name: kafka
    image: wurstmeister/kafka:2.13-2.8.1
    networks:
      - kafka_network
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: 'simple-topic:1:1'
      KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL_SAME_HOST://localhost:29092,INTERNAL://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL_SAME_HOST:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    ports:
      - 29092:29092
    depends_on:
      - zookeeper

  kafka-connect:
    image: wurstmeister/kafka:2.13-2.8.1
    container_name: kafka_connect
    networks:
      - kafka_network
    ports:
      - '8083:8083'
    volumes:
      - './kafka-connect-config/connect-distributed.properties:/opt/kafka/config/connect-distributed.properties'
      - './connector-plugins/:/kafka/connect/'
    depends_on:
      - zookeeper
      - kafka
    command: /opt/kafka/bin/connect-distributed.sh /opt/kafka/config/connect-distributed.properties

  postgres:
    image: postgres:14.2-alpine
    container_name: postgres
    networks:
      - kafka_network
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database
    volumes:
      - postgres-data:/var/lib/postgresql/data
    command: [ "postgres", "-c", "wal_level=logical" ]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.2.0
    container_name: elastic
    networks:
      - kafka_network
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    ports:
      - 9200:9200

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    networks:
      - kafka_network
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    ports:
      - 8080:8080

volumes:
  postgres-data:
networks:
  kafka_network: